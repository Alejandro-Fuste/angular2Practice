{"ast":null,"code":"export class StarWarsService {\n  constructor() {\n    this.characters = [{\n      name: \"Luke Skywalker\",\n      side: \"\"\n    }, {\n      name: \"Darth Vader\",\n      side: \"\"\n    }];\n  }\n  getCharacters(chosenList) {\n    if (chosenList === \"all\") {\n      return this.characters.slice();\n    }\n    return this.characters.filter(char => {\n      return char.side === chosenList;\n    });\n  }\n  onSideChosen(charInfo) {\n    const position = this.characters.findIndex(char => {\n      return char.name === charInfo.name;\n    });\n    this.characters[position].side = charInfo.side;\n  }\n}","map":{"version":3,"mappings":"AAEA,OAAM,MAAOA,eAAe;EAA5BC;IACU,eAAU,GAAoB,CACpC;MAAEC,IAAI,EAAE,gBAAgB;MAAEC,IAAI,EAAE;IAAE,CAAE,EACpC;MAAED,IAAI,EAAE,aAAa;MAAEC,IAAI,EAAE;IAAE,CAAE,CAClC;EAiBH;EAfEC,aAAa,CAACC,UAAkB;IAC9B,IAAIA,UAAU,KAAK,KAAK,EAAE;MACxB,OAAO,IAAI,CAACC,UAAU,CAACC,KAAK,EAAE;;IAEhC,OAAO,IAAI,CAACD,UAAU,CAACE,MAAM,CAAEC,IAAI,IAAI;MACrC,OAAOA,IAAI,CAACN,IAAI,KAAKE,UAAU;IACjC,CAAC,CAAC;EACJ;EAEAK,YAAY,CAACC,QAAa;IACxB,MAAMC,QAAQ,GAAG,IAAI,CAACN,UAAU,CAACO,SAAS,CAAEJ,IAAI,IAAI;MAClD,OAAOA,IAAI,CAACP,IAAI,KAAKS,QAAQ,CAACT,IAAI;IACpC,CAAC,CAAC;IACF,IAAI,CAACI,UAAU,CAACM,QAAQ,CAAC,CAACT,IAAI,GAAGQ,QAAQ,CAACR,IAAI;EAChD","names":["StarWarsService","constructor","name","side","getCharacters","chosenList","characters","slice","filter","char","onSideChosen","charInfo","position","findIndex"],"sourceRoot":"","sources":["/Users/alejandro/Desktop/projects/angular2Practice/src/app/star-wars.service.ts"],"sourcesContent":["import { characterType } from \"../types/character\";\n\nexport class StarWarsService {\n  private characters: characterType[] = [\n    { name: \"Luke Skywalker\", side: \"\" },\n    { name: \"Darth Vader\", side: \"\" },\n  ];\n\n  getCharacters(chosenList: string) {\n    if (chosenList === \"all\") {\n      return this.characters.slice();\n    }\n    return this.characters.filter((char) => {\n      return char.side === chosenList;\n    });\n  }\n\n  onSideChosen(charInfo: any) {\n    const position = this.characters.findIndex((char) => {\n      return char.name === charInfo.name;\n    });\n    this.characters[position].side = charInfo.side;\n  }\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}