{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"../star-wars.service\";\nimport * as i2 from \"@angular/common\";\nimport * as i3 from \"@angular/forms\";\nfunction CreateCharacterComponent_span_7_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\", 11);\n    i0.ɵɵtext(1, \"Please enter a name!\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction CreateCharacterComponent_option_12_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"option\", 12);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const option_r4 = ctx.$implicit;\n    i0.ɵɵproperty(\"value\", option_r4.value);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", option_r4.display, \" \");\n  }\n}\nexport let CreateCharacterComponent = /*#__PURE__*/(() => {\n  class CreateCharacterComponent {\n    constructor(swService) {\n      this.availableSides = [{\n        display: \"None\",\n        value: \"\"\n      }, {\n        display: \"Light\",\n        value: \"light\"\n      }, {\n        display: \"Dark\",\n        value: \"dark\"\n      }];\n      this.swService = swService;\n    }\n    onSubmit(submittedForm) {\n      const {\n        name,\n        side\n      } = submittedForm.form.value;\n      const {\n        invalid\n      } = submittedForm;\n      if (invalid) return;\n      this.swService.addCharacters(name, side);\n      console.dir(submittedForm);\n    }\n  }\n  CreateCharacterComponent.ɵfac = function CreateCharacterComponent_Factory(t) {\n    return new (t || CreateCharacterComponent)(i0.ɵɵdirectiveInject(i1.StarWarsService));\n  };\n  CreateCharacterComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: CreateCharacterComponent,\n    selectors: [[\"app-create-character\"]],\n    decls: 15,\n    vars: 3,\n    consts: [[3, \"ngSubmit\"], [\"form\", \"ngForm\"], [1, \"mb-3\"], [\"for\", \"name\", 1, \"form-label\"], [\"type\", \"text\", \"id\", \"name\", \"name\", \"name\", \"ngModel\", \"\", \"required\", \"\", 1, \"form-control\"], [\"nameCtrl\", \"ngModel\"], [\"class\", \"help-block\", 4, \"ngIf\"], [\"for\", \"side\", 1, \"form-label\"], [\"name\", \"side\", \"id\", \"side\", \"ngModel\", \"\", 1, \"form-select\"], [3, \"value\", 4, \"ngFor\", \"ngForOf\"], [\"type\", \"submit\", 1, \"btn\", \"btn-primary\", 3, \"disabled\"], [1, \"help-block\"], [3, \"value\"]],\n    template: function CreateCharacterComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        const _r5 = i0.ɵɵgetCurrentView();\n        i0.ɵɵelementStart(0, \"form\", 0, 1);\n        i0.ɵɵlistener(\"ngSubmit\", function CreateCharacterComponent_Template_form_ngSubmit_0_listener() {\n          i0.ɵɵrestoreView(_r5);\n          const _r0 = i0.ɵɵreference(1);\n          return i0.ɵɵresetView(ctx.onSubmit(_r0));\n        });\n        i0.ɵɵelementStart(2, \"div\", 2)(3, \"label\", 3);\n        i0.ɵɵtext(4, \"Character Name\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(5, \"input\", 4, 5);\n        i0.ɵɵtemplate(7, CreateCharacterComponent_span_7_Template, 2, 0, \"span\", 6);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(8, \"div\", 2)(9, \"label\", 7);\n        i0.ɵɵtext(10, \"Choose Side\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(11, \"select\", 8);\n        i0.ɵɵtemplate(12, CreateCharacterComponent_option_12_Template, 2, 2, \"option\", 9);\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(13, \"button\", 10);\n        i0.ɵɵtext(14, \" Add Character \");\n        i0.ɵɵelementEnd()();\n      }\n      if (rf & 2) {\n        const _r0 = i0.ɵɵreference(1);\n        const _r1 = i0.ɵɵreference(6);\n        i0.ɵɵadvance(7);\n        i0.ɵɵproperty(\"ngIf\", _r1.invalid && _r1.touched);\n        i0.ɵɵadvance(5);\n        i0.ɵɵproperty(\"ngForOf\", ctx.availableSides);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"disabled\", _r0.invalid);\n      }\n    },\n    dependencies: [i2.NgForOf, i2.NgIf, i3.ɵNgNoValidate, i3.NgSelectOption, i3.ɵNgSelectMultipleOption, i3.DefaultValueAccessor, i3.SelectControlValueAccessor, i3.NgControlStatus, i3.NgControlStatusGroup, i3.RequiredValidator, i3.NgModel, i3.NgForm],\n    styles: [\"input.ng-invalid.ng-touched[_ngcontent-%COMP%]{border:1px solid red}.help-block[_ngcontent-%COMP%]{color:red;margin:20px 0}\"]\n  });\n  return CreateCharacterComponent;\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}