{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"../star-wars.service\";\nimport * as i2 from \"@angular/forms\";\nfunction CreateCharacterComponent_span_7_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\", 11);\n    i0.ɵɵtext(1, \"Please enter a name!\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction CreateCharacterComponent_option_12_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"option\", 12);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const option_r4 = ctx.$implicit;\n    i0.ɵɵproperty(\"value\", option_r4.value);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", option_r4.display, \" \");\n  }\n}\nexport class CreateCharacterComponent {\n  constructor(swService) {\n    this.availableSides = [{\n      display: \"None\",\n      value: \"\"\n    }, {\n      display: \"Light\",\n      value: \"light\"\n    }, {\n      display: \"Dark\",\n      value: \"dark\"\n    }];\n    this.swService = swService;\n  }\n  onSubmit(submittedForm) {\n    const {\n      name,\n      side\n    } = submittedForm.form.value;\n    const {\n      invalid\n    } = submittedForm;\n    if (invalid) return;\n    this.swService.addCharacters(name, side);\n    console.dir(submittedForm);\n  }\n}\nCreateCharacterComponent.ɵfac = function CreateCharacterComponent_Factory(t) {\n  return new (t || CreateCharacterComponent)(i0.ɵɵdirectiveInject(i1.StarWarsService));\n};\nCreateCharacterComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: CreateCharacterComponent,\n  selectors: [[\"app-create-character\"]],\n  decls: 15,\n  vars: 3,\n  consts: [[3, \"ngSubmit\"], [\"form\", \"ngForm\"], [1, \"mb-3\"], [\"for\", \"name\", 1, \"form-label\"], [\"type\", \"text\", \"id\", \"name\", \"name\", \"name\", \"ngModel\", \"\", \"required\", \"\", 1, \"form-control\"], [\"nameCtrl\", \"ngModel\"], [\"class\", \"help-block\", 4, \"ngIf\"], [\"for\", \"side\", 1, \"form-label\"], [\"name\", \"side\", \"id\", \"side\", \"ngModel\", \"\", 1, \"form-select\"], [3, \"value\", 4, \"ngFor\", \"ngForOf\"], [\"type\", \"submit\", 1, \"btn\", \"btn-primary\", 3, \"disabled\"], [1, \"help-block\"], [3, \"value\"]],\n  template: function CreateCharacterComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      const _r5 = i0.ɵɵgetCurrentView();\n      i0.ɵɵelementStart(0, \"form\", 0, 1);\n      i0.ɵɵlistener(\"ngSubmit\", function CreateCharacterComponent_Template_form_ngSubmit_0_listener() {\n        i0.ɵɵrestoreView(_r5);\n        const _r0 = i0.ɵɵreference(1);\n        return i0.ɵɵresetView(ctx.onSubmit(_r0));\n      });\n      i0.ɵɵelementStart(2, \"div\", 2)(3, \"label\", 3);\n      i0.ɵɵtext(4, \"Character Name\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(5, \"input\", 4, 5);\n      i0.ɵɵtemplate(7, CreateCharacterComponent_span_7_Template, 2, 0, \"span\", 6);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(8, \"div\", 2)(9, \"label\", 7);\n      i0.ɵɵtext(10, \"Choose Side\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(11, \"select\", 8);\n      i0.ɵɵtemplate(12, CreateCharacterComponent_option_12_Template, 2, 2, \"option\", 9);\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(13, \"button\", 10);\n      i0.ɵɵtext(14, \" Add Character \");\n      i0.ɵɵelementEnd()();\n    }\n    if (rf & 2) {\n      const _r0 = i0.ɵɵreference(1);\n      const _r1 = i0.ɵɵreference(6);\n      i0.ɵɵadvance(7);\n      i0.ɵɵproperty(\"ngIf\", _r1.invalid && _r1.touched);\n      i0.ɵɵadvance(5);\n      i0.ɵɵproperty(\"ngForOf\", ctx.availableSides);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"disabled\", _r0.invalid);\n    }\n  },\n  dependencies: [i2.ɵNgNoValidate, i2.NgSelectOption, i2.ɵNgSelectMultipleOption, i2.DefaultValueAccessor, i2.SelectControlValueAccessor, i2.NgControlStatus, i2.NgControlStatusGroup, i2.RequiredValidator, i2.NgModel, i2.NgForm],\n  styles: [\"input.ng-invalid.ng-touched[_ngcontent-%COMP%] {\\n    border: 1px solid red;\\n}\\n\\n.help-block[_ngcontent-%COMP%] {\\n    color: red;\\n    margin: 20px 0\\n}\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9hcHAvY3JlYXRlLWNoYXJhY3Rlci9jcmVhdGUtY2hhcmFjdGVyLmNvbXBvbmVudC5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7SUFDSSxxQkFBcUI7QUFDekI7O0FBRUE7SUFDSSxVQUFVO0lBQ1Y7QUFDSiIsInNvdXJjZXNDb250ZW50IjpbImlucHV0Lm5nLWludmFsaWQubmctdG91Y2hlZCB7XG4gICAgYm9yZGVyOiAxcHggc29saWQgcmVkO1xufVxuXG4uaGVscC1ibG9jayB7XG4gICAgY29sb3I6IHJlZDtcbiAgICBtYXJnaW46IDIwcHggMFxufSJdLCJzb3VyY2VSb290IjoiIn0= */\"]\n});","map":{"version":3,"mappings":";;;;;IAYIA,gCACG;IAAAA,oCAAoB;IAAAA,iBACtB;;;;;IAKCA,kCAAqE;IACnEA,YACF;IAAAA,iBAAS;;;;IAFqCA,uCAAsB;IAClEA,eACF;IADEA,kDACF;;;ACZN,OAAM,MAAOC,wBAAwB;EASnCC,YAAYC,SAA0B;IARtC,mBAAc,GAAyB,CACrC;MAAEC,OAAO,EAAE,MAAM;MAAEC,KAAK,EAAE;IAAE,CAAE,EAC9B;MAAED,OAAO,EAAE,OAAO;MAAEC,KAAK,EAAE;IAAO,CAAE,EACpC;MAAED,OAAO,EAAE,MAAM;MAAEC,KAAK,EAAE;IAAM,CAAE,CACnC;IAKC,IAAI,CAACF,SAAS,GAAGA,SAAS;EAC5B;EAEAG,QAAQ,CAACC,aAAkB;IACzB,MAAM;MAAEC,IAAI;MAAEC;IAAI,CAAE,GAAGF,aAAa,CAACG,IAAI,CAACL,KAAK;IAC/C,MAAM;MAAEM;IAAO,CAAE,GAAGJ,aAAa;IAEjC,IAAII,OAAO,EAAE;IAEb,IAAI,CAACR,SAAS,CAACS,aAAa,CAACJ,IAAI,EAAEC,IAAI,CAAC;IAExCI,OAAO,CAACC,GAAG,CAACP,aAAa,CAAC;EAC5B;;AAtBWN,wBAAwB;mBAAxBA,wBAAwB;AAAA;AAAxBA,wBAAwB;QAAxBA,wBAAwB;EAAAc;EAAAC;EAAAC;EAAAC;EAAAC;IAAA;;MDTrCnB,kCAAiD;MAA3CA;QAAAA;QAAA;QAAA,OAAYA,gCAAc;MAAA,EAAC;MAC/BA,8BAAkB;MACqBA,8BAAc;MAAAA,iBAAQ;MAC3DA,8BAQE;MACFA,2EAEC;MACHA,iBAAM;MACNA,8BAAkB;MACqBA,4BAAW;MAAAA,iBAAQ;MACxDA,kCAA0D;MACxDA,iFAES;MACXA,iBAAS;MAEXA,mCAAwE;MACtEA,gCACF;MAAAA,iBAAS;;;;;MAdmBA,eAA0C;MAA1CA,iDAA0C;MAOvCA,eAAiB;MAAjBA,4CAAiB;MAKFA,eAAyB;MAAzBA,sCAAyB","names":["i0","CreateCharacterComponent","constructor","swService","display","value","onSubmit","submittedForm","name","side","form","invalid","addCharacters","console","dir","selectors","decls","vars","consts","template"],"sourceRoot":"","sources":["/Users/alejandro/Desktop/projects/angular2Practice/src/app/create-character/create-character.component.html","/Users/alejandro/Desktop/projects/angular2Practice/src/app/create-character/create-character.component.ts"],"sourcesContent":["<form (ngSubmit)=\"onSubmit(form)\" #form=\"ngForm\">\n  <div class=\"mb-3\">\n    <label for=\"name\" class=\"form-label\">Character Name</label>\n    <input\n      type=\"text\"\n      class=\"form-control\"\n      id=\"name\"\n      name=\"name\"\n      ngModel\n      required\n      #nameCtrl=\"ngModel\"\n    />\n    <span class=\"help-block\" *ngIf=\"nameCtrl.invalid && nameCtrl.touched\"\n      >Please enter a name!</span\n    >\n  </div>\n  <div class=\"mb-3\">\n    <label for=\"side\" class=\"form-label\">Choose Side</label>\n    <select name=\"side\" id=\"side\" class=\"form-select\" ngModel>\n      <option *ngFor=\"let option of availableSides\" [value]=\"option.value\">\n        {{ option.display }}\n      </option>\n    </select>\n  </div>\n  <button class=\"btn btn-primary\" type=\"submit\" [disabled]=\"form.invalid\">\n    Add Character\n  </button>\n</form>\n","import { Component } from \"@angular/core\";\nimport { availableSidesType } from \"../../types/character\";\nimport { StarWarsService } from \"../star-wars.service\";\n\n@Component({\n  selector: \"app-create-character\",\n  templateUrl: \"./create-character.component.html\",\n  styleUrls: [\"./create-character.component.css\"],\n})\nexport class CreateCharacterComponent {\n  availableSides: availableSidesType[] = [\n    { display: \"None\", value: \"\" },\n    { display: \"Light\", value: \"light\" },\n    { display: \"Dark\", value: \"dark\" },\n  ];\n\n  swService: StarWarsService;\n\n  constructor(swService: StarWarsService) {\n    this.swService = swService;\n  }\n\n  onSubmit(submittedForm: any) {\n    const { name, side } = submittedForm.form.value;\n    const { invalid } = submittedForm;\n\n    if (invalid) return;\n\n    this.swService.addCharacters(name, side);\n\n    console.dir(submittedForm);\n  }\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}