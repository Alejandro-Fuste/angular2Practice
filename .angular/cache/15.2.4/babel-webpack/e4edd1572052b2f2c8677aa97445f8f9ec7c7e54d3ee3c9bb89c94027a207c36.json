{"ast":null,"code":"import { Subject } from \"rxjs\";\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"./log.service\";\nimport * as i2 from \"@angular/common/http\";\nexport let StarWarsService = /*#__PURE__*/(() => {\n  class StarWarsService {\n    constructor(logSer, http) {\n      this.characters = [{\n        name: \"Luke Skywalker\",\n        side: \"\"\n      }, {\n        name: \"Darth Vader\",\n        side: \"\"\n      }];\n      this.charactersChanged = new Subject();\n      this.logService = logSer;\n      this.http = http;\n    }\n    fetchCharacters() {\n      this.http.get(\"https://swapi.dev/api/people/\").subscribe(response => {\n        const fetchedCharacters = response.results;\n        const charactersList = fetchedCharacters.map(char => {\n          return {\n            name: char.name,\n            side: \"\"\n          };\n        });\n        this.characters = charactersList;\n        this.charactersChanged.next();\n      });\n    }\n    getCharacters(chosenList) {\n      if (chosenList === \"all\") {\n        return this.characters.slice();\n      }\n      return this.characters.filter(char => {\n        return char.side === chosenList;\n      });\n    }\n    onSideChosen(charInfo) {\n      const position = this.characters.findIndex(char => {\n        return char.name === charInfo.name;\n      });\n      this.characters[position].side = charInfo.side;\n      this.charactersChanged.next();\n      this.logService.writeLog(`Changed side of ${charInfo.name} to new side: ${charInfo.side}`);\n    }\n    addCharacters(name, side) {\n      const position = this.characters.findIndex(char => {\n        return char.name === name;\n      });\n      if (position !== -1) return;\n      const newCharacter = {\n        name,\n        side\n      };\n      this.characters.push(newCharacter);\n    }\n  }\n  StarWarsService.ɵfac = function StarWarsService_Factory(t) {\n    return new (t || StarWarsService)(i0.ɵɵinject(i1.LogService), i0.ɵɵinject(i2.HttpClient));\n  };\n  StarWarsService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: StarWarsService,\n    factory: StarWarsService.ɵfac\n  });\n  return StarWarsService;\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}